#!/usr/bin/env python
# -*- coding: utf-8 -*-
# vim: ai ts=4 sts=4 et sw=4 nu

from __future__ import (unicode_literals, absolute_import,
                        division, print_function)

from django.core.management.base import BaseCommand
from repatriate.models import (
    Lien, Activite, NiveauxScolaire, TypeAssistance,
    Collect, Target, Settings, Person, Organization, ContactTemoin,
    Camp, Vulnerability)

og_l = [
    ("unhcr"   ,"UNHCR"),
    ("drds"    ,"DRDS"),
    ("oim" ,"OIM"),
    ("unicef"  ,"UNICEF"),
    ("nrc" ,"NRC"),
    ("pam" ,"PAM"),
    ]
camp_list = [
    ("goudoubo", "Goudoubo (Droi)"),
    ("fererio", "Fererio (Fererio)"),
    ("mentao_damba", "Mentao/Damba (Djibo)"),
    ("sag_nioniogo_ouaga", "Sag-Nioniogo Ouaga (MLI)"),
    ("bobo_dioulasso", "Bobo Dioulasso"),
    ("ougadougou", "Ougadougou"),
    ("abala", "Abala"),
    ("niamey_urbain", "Niamey (Urbain)"),
    ("niamey_consolidation", "Niamey Consolidation"),
    ("ouallam_refugies", "Ouallam refugies"),
    ("tillabery_refugies", "Tillabery refugies"),
    ("zar_tillia_refugies", "ZAR-Tillia refugies"),
    ("zar_tahoua_refugies_mobile", "ZAR-Tahoua refugies Mobile"),
    ("bassoukounou", "Bassoukounou")]
lien_l = [
    ("chef_de_famille", "Chef de famille"),
    ("epouse",  "Épouse"),
    ("mari",    "Mari"),
    ("fils",    "Fils"),
    ("fille",   "Fille"),
    ("frere",   "Frère"),
    ("soeur",   "Sœur"),
    ("mere",    "Mère "),
    ("pere",    "Père"),
    ("grand_pere",  "Grand père"),
    ("grand_mere",  "Grand mère"),
    ("petit_fils",  "Petit fils"),
    ("petit_fille", "Petit fille"),
    ("oncle",   "Oncle"),
    ("tante",   "Tante"),
    ("neveu",   "Neveu"),
    ("niece",   "Nièce"),
    ("cousin",  "Cousin"),
    ("cousine", "Cousine"),
    ("beau_pere",   "Beau père"),
    ("belle_mere",  "Belle mère"),
    ("beau_fils",   "Beau Fils"),
    ("belle_fille", "Belle fille"),
    ("gendre_masculin", "Gendre (masculin)"),
    ("gendre_feminin",  "Gendre (féminin)"),
    ("pere_adoptif",    "Père adoptif"),
    ("mere_adoptive",   "Mère adoptive"),
    ("demi_frere",  "Demi-frère"),
    ("demi_soeur",  "Demi-sœur"),
    ("aucun_lien_de_parente_masculin",  "Aucun lien de parenté (masculin)"),
    ("aucun_lien_de_parente_feminin",   "Aucun lien de parenté (féminin)"),
    ]
activ_l = [
    ("accoucheuse_traditionnelle_sage_femme", "Accoucheuse traditionnelle/sage-femme"),
    ("agent_services_sociaux", "Agent Services Sociaux"),
    ("agriculteur", "Agriculteur"),
    ("agronome", "Agronome"),
    ("architecte", "Architecte"),
    ("artisan", "Artisan"),
    ("artiste", "Artiste"),
    ("athlete_footballeur", "Athlete/Footballeur"),
    ("aucun", "Aucun"),
    ("autorite_traditionnelle", "Autorité traditionnelle"),
    ("berger", "Berger"),
    ("bijoutier", "Bijoutier"),
    ("biologiste", "Biologiste"),
    ("boucher", "Boucher"),
    ("boulanger", "Boulanger"),
    ("boutiquier_petit_commerce", "Boutiquier/Petit commerce"),
    ("charpentier_menuisier", "Charpentier/Menuisier"),
    ("chasseur", "Chasseur"),
    ("coiffeuse_coiffeur_tresseur", "Coiffeuse/Coiffeur/Tresseur"),
    ("commercant", "Commercant"),
    ("comptable", "Comptable"),
    ("conducteur", "Conducteur"),
    ("constructeur", "Constructeur"),
    ("cordonnier", "Cordonnier"),
    ("couturier", "Couturier"),
    ("cuisinier", "Cuisinier"),
    ("cultivateur_laboureur", "Cultivateur/Laboureur"),
    ("declarant_en_douane", "Declarant en douane"),
    ("docker", "Docker"),
    ("domestique_menagere", "Domestique/Ménagère"),
    ("electrician", "Electrician"),
    ("eleveur", "Éleveur"),
    ("enseignant_ecole_primaire", "Enseignant Ecole Primaire"),
    ("enseignant_ecole_secondaire", "Enseignant Ecole Secondaire"),
    ("etudiant", "Étudiant"),
    ("expert_informatique", "Expert informatique"),
    ("femme_de_menage_hotelier", "Femme de Ménage/Hotelier"),
    ("fonctionnaire", "Fonctionnaire"),
    ("forgeron", "Forgeron"),
    ("frigoriste", "Frigoriste"),
    ("guardien", "Guardien"),
    ("guerisseur_traditionelle", "Guérisseur Traditionelle"),
    ("infirmier_infirmiere", "Infirmier/Infirmiere"),
    ("ingenieur", "Ingénieur"),
    ("journaliste", "Journaliste"),
    ("juriste_avocat", "Juriste/Avocat"),
    ("macon", "Macon"),
    ("mechanicien", "Méchanicien"),
    ("medecin", "Médecin"),
    ("media", "Média"),
    ("menagere", "Ménagère"),
    ("menuisier", "Menuisier"),
    ("militaire", "Militaire"),
    ("mineur", "Mineur"),
    ("officier_de_police_policier", "Officier de Police/Policier"),
    ("operateur_agent_de_saisie", "Operateur/agent de saisie"),
    ("ouvrier", "Ouvrier"),
    ("ouvrier_du_batiment", "Ouvrier du batiment"),
    ("tapissier", "Tapissier"),
    ("pecheur", "Pêcheur"),
    ("peintre", "Peintre"),
    ("photographe", "Photographe"),
    ("plombier", "Plombier"),
    ("politique", "Politique"),
    ("porteur", "Porteur"),
    ("potier", "Potier"),
    ("tailleur", "Tailleur"),
    ("tapissier", "Tapissier"),
    ("technicien_de_puits", "Technicien de puits"),
    ("tisserand", "Tisserand"),
    ("tisseur_de_paniers_corbeilles", "Tisseur de paniers/corbeilles"),
    ("vendeur_ambulant_de_nourriture", "Vendeur ambulant de nourriture "),
    ("veterinaire", "Veterinaire"),
    ("vitrier", "Vitrier"),
    ("religieux_maitre_de_coran_mon", "Religieux, Maitre de Coran, Mon"),
    ("secretaire", "Sécretaire"),
    ("soudeur", "Soudeur")]
niv_l =[(1,   "1 ère année d'études"),
    (2,   "2 ère année d'études"),
    (3,   "3 ère année d'études"),
    (4,   "4 ère année d'études"),
    (5,   "5 ère année d'études"),
    (6,   "6 ère année d'études"),
    (7,   "7 ère année d'études"),
    (8,   "8 ère année d'études"),
    (9,   "9 ère année d'études"),
    (10,  "Secondaire 1"),
    (11,  "Secondaire 2"),
    (12,  "Secondaire 3"),
    (13,  "Professionnel/ Agriculture"),
    ("TC",  "Technique ou Bénévole"),
    ("UG",  "Niveau Universitaire"),
    ("PG",  "Second cycle/ Doctorat"),
    ("IN",  "Education informelle"),
    ("NE",  "Aucune éducation"),
    ("U",   "Inconnue")]
assis_l =[
    ("abris",   "Abris"),
    ("viatique", "Viatique"),
    ("alimentaire", "Alimentaire"),
    ("education",   "Éducation"),
    ("nourriture",  "Nourriture"),
    ("protection",  "Protection"),
]
vul_l = [
    ("CR-AF",   "Enfant associé avec des forces ou des groupes armés"),
    ("CR-CC",   "Enfant chef de famille"),
    ("CR-CL",   "Enfant en conflit avec la loi"),
    ("CR-CP",   "Enfant parent"),
    ("CR-CS",   "Epoux mineur"),
    ("CR-LO",   "Enfant engagé dans d'autres formes de travail des enfants"),
    ("CR-LW",   "Enfant engagé dans les formes de travail des enfants"),
    ("CR-NE",   "Enfant en danger de ne pas fréquenter l'école"),
    ("CR-SE",   "Enfant avec des besoins spéciaux en éducation"),
    ("CR-TP",   "Mineure porteuse d'une grossesse"),
    ("SC-CH",   "Enfant à la tête d'un ménage"),
    ("SC-FC",   "Enfant sous tutelle de nourrice"),
    ("SC-IC",   "Enfant sous tutelle institutionnelle"),
    ("SC-SC",   "Enfant séparé"),
    ("SC-UC",   "Enfant non accompagné"),
    ("WR-LC",   "femme à risque allaitante"),
    ("WR-SF",   "Femme celibataire à risque"),
    ("WR-WR",   "Femme à risque"),
    ("ER-FR",   "Personne agée dans l'incapacité de prendre soin d'elle même"),
    ("ER-MC",   "personne agée avec des enfants mineurs"),
    ("ER-NF",   "Personne agée isolée"),
    ("SP-CG",   "chef de ménage seul"),
    ("SP-GP",   "chef de ménage seul grand parent"),
    ("SP-PT",   "Chef de ménage seul parent"),
    ("DS-PS",   "Alteration physique sévère"),
    ("DS-SD",   "Limitation/altération de l'expréssion orale"),
    ("DS-BD",   "Vision faible"),
    ("DS-DF",   "déterioration de l'ouie (incl. surdite)"),
    ("DS-MM",   "Alteration mentale moyenne"),
    ("DS-MS",   "Alteration mentale sévère"),
    ("DS-PM",   "Altération physique moyenne"),
    ("SM-OT",   "Condition médicale serieuse autre"),
    ("SM-MI",   "Maladie mentale"),
    ("SM-MN",   "Mal nutrition"),
    ("SM-AD",   "Condition médicale serieuse dépendance"),
    ("SM-CC",   "condition médicale serieuse condition médicale critique"),
    ("SM-CI",   "condition médicale serieuse maladie chronique"),
    ("SM-DP",   "Grossesse difficile"),
    ("FU-FR",   "Demande de reunion familiale"),
    ("FU-TR",   "Recherche (tracing) demandée"),
    ("LP-AF",   "Anciennement associé avec des forces ou groupes armés"),
    ("LP-AN",   "Abus et négligence"),
    ("LP-AP",   "Auteur presumé"),
    ("LP-BN",   "Besoins primaires non satisfaits"),
    ("LP-CR",   "casier judiciaire"),
    ("LP-DA",   "Présentement détenu/gardé dans le pays d'asile"),
    ("LP-DO",   "Présentement détenu/gardé dans le pays d'origine"),
    ("LP-DT",   "détenu ailleurs"),
    ("LP-IH", "en cavale"),
    ("LP-WP",   "Protection des témoins"),
    ("LP-RR",   "Risque de refoulement"),
    ("LP-ST",   "Menaces en terme de securité"),
    ("LP-LS",   "Manque de solutions durables"),
    ("LP-MD",   "Deplacements multiples"),
    ("LP-MM",   "Besoin urgent de protection physique -mariage mixte"),
    ("LP-MS",   "Marginalisé dans la société"),
    ("LP-NA",   "Manque d'accès aux services"),
    ("LP-ND",   "sans papier"),
    ("LP-RD",   "en danger de déportation"),
    ("LP-RP",   "En danger suite à son profil"),
    ("TR-WV",   "témoins de la violence contre d'autres personnes"),
    ("TR-WVIC", "victime de la violence contre d'autres personnes")
]


class Command(BaseCommand):

    def handle(self, *args, **options):
        # self.input_data(Camp, camp_list)
        # self.input_data(Organization, og_l)
        # self.input_data(Profession, prof_l)
        # self.input_data(Lien, lien_l)
        self.input_data(Activite, activ_l)
        # self.input_data(NiveauxScolaire, niv_l)
        # self.input_data(TypeAssistance, assis_l)
        # self.input_data(Vulnerability, vul_l)

    def input_data(self, m, l):
        # print(m)
        for i in l:
            # print(i)
            c = m()
            c.slug = i[0]
            c.name = i[1]
            c.save()
            print(c.slug)
